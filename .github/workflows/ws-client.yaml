name: ws-client

on:
  push:
    branches:
      - '*'
    paths:
      - 'ws-client/**'
  pull_request:
    branches:
      - '*'
    paths:
      - 'ws-client/**'

jobs:
  build-vars:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    outputs:
      sha-short: ${{ steps.vars.outputs.sha_short }}
      created-date: ${{ steps.vars.outputs.created_date }}

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Get commit hash and date
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git log -1 --format="%h")"
          echo "::set-output name=created_date::$(date "+%s")"

  paths-filter:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    outputs:
      dependency-files: ${{ steps.changes.outputs.dependency-files }}
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Create path filters
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dependency-files:
              - 'ws-client/package.json'
              - 'ws-client/yarn.lock'

  build:
    runs-on: ${{ matrix.os }}
    needs: [build-vars, paths-filter]

    if: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')) || (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'development')) }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Get npm package version
        uses: martinbeentjes/npm-get-version-action@master
        id: package-version
        with:
          path: ./ws-client

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup production buildx
        uses: docker/setup-buildx-action@v2
        id: prodbuilder

      - name: Setup development buildx
        uses: docker/setup-buildx-action@v2
        if: needs.paths-filter.outputs.dependency-files == 'true'
        id: devbuilder

      - name: Build against prodbuilder
        uses: docker/build-push-action@v3
        with:
          context: ./ws-client
          push: true
          builder: ${{ steps.prodbuilder.output.name }}
          target: prod
          build-args: |
            SOURCE_COMMIT=${{ github.sha }}
            CREATED_DATE=${{ needs.build-vars.outputs.created-date }}
          tags: |
            rodarte/nestjs-fr-teslo-ws-client-prod:${{ needs.build-vars.outputs.sha-short }}
            rodarte/nestjs-fr-teslo-ws-client-prod:${{ steps.package-version.outputs.current-version }}
            rodarte/nestjs-fr-teslo-ws-client-prod:latest

      - name: Build against devbuilder
        uses: docker/build-push-action@v3
        if: needs.paths-filter.outputs.dependency-files == 'true'
        with:
          context: ./ws-client
          push: true
          builder: ${{ steps.devbuilder.output.name }}
          target: dev
          build-args: |
            SOURCE_COMMIT=${{ github.sha }}
            CREATED_DATE=${{ needs.build-vars.outputs.created-date }}
          tags: |
            rodarte/nestjs-fr-teslo-ws-client-dev:${{ needs.build-vars.outputs.sha-short }}
            rodarte/nestjs-fr-teslo-ws-client-dev:${{ steps.package-version.outputs.current-version }}
            rodarte/nestjs-fr-teslo-ws-client-dev:latest
